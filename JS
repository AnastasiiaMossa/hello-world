html
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Галерея изображений</title>
    <style>
      
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f8f9fa;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

    
        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header__title {
            font-size: 2.5rem;
            margin-bottom: 10px;
            color: #2c3e50;
        }

        .header__description {
            font-size: 1.1rem;
            color: #7f8c8d;
            max-width: 600px;
            margin: 0 auto;
        }

        .controls {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .button {
            padding: 12px 24px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .button:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        .button:active {
            transform: translateY(0);
        }

        .button--secondary {
            background-color: #2ecc71;
        }

        .button--secondary:hover {
            background-color: #27ae60;
        }

        .button--danger {
            background-color: #e74c3c;
        }

        .button--danger:hover {
            background-color: #c0392b;
        }

        .loader {
            display: none;
            justify-content: center;
            margin: 30px 0;
        }

        .loader--visible {
            display: flex;
        }

        .loader__spinner {
            width: 50px;
            height: 50px;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .gallery__item {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background-color: white;
        }

        .gallery__item:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
        }

        .gallery__image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            display: block;
        }

        .gallery__caption {
            padding: 12px;
            font-size: 0.9rem;
            color: #555;
            text-align: center;
        }

        .message {
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            text-align: center;
            display: none;
        }

        .message--error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .message--success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .message--visible {
            display: block;
        }

        .footer {
            text-align: center;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #eaeaea;
            color: #7f8c8d;
            font-size: 0.9rem;
        }

        @media (max-width: 768px) {
            .gallery {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
                gap: 15px;
            }
            
            .header__title {
                font-size: 2rem;
            }
            
            .controls {
                flex-direction: column;
                align-items: center;
            }
            
            .button {
                width: 100%;
                max-width: 300px;
            }
        }

        @media (max-width: 480px) {
            .gallery {
                grid-template-columns: 1fr;
            }
            
            body {
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1 class="header__title">Галерея изображений</h1>
            <p class="header__description">Нажмите кнопку ниже, чтобы загрузить случайные изображения с сервера</p>
        </header>

        <div class="controls">
            <button class="button" id="loadImagesButton">Загрузить изображения</button>
            <button class="button button--secondary" id="loadMoreButton">Загрузить ещё</button>
            <button class="button button--danger" id="clearGalleryButton">Очистить галерею</button>
        </div>

        <div class="message message--error" id="errorMessage"></div>
        <div class="message message--success" id="successMessage"></div>

        <div class="loader" id="loader">
            <div class="loader__spinner"></div>
        </div>

        <div class="gallery" id="gallery"></div>

        <footer class="footer">
            <p>Галерея изображений &copy; 2023 | Все изображения загружаются с внешнего API</p>
        </footer>
    </div>

    <script>
      
        const galleryElement = document.getElementById('gallery');
        const loadImagesButton = document.getElementById('loadImagesButton');
        const loadMoreButton = document.getElementById('loadMoreButton');
        const clearGalleryButton = document.getElementById('clearGalleryButton');
        const loaderElement = document.getElementById('loader');
        const errorMessageElement = document.getElementById('errorMessage');
        const successMessageElement = document.getElementById('successMessage');

       
        const API_URL = 'https://dog.ceo/api/breeds/image/random/20';

      
        const showLoader = () => {
            loaderElement.classList.add('loader--visible');
        };

      
        const hideLoader = () => {
            loaderElement.classList.remove('loader--visible');
        };

       
        const showErrorMessage = (message) => {
            errorMessageElement.textContent = message;
            errorMessageElement.classList.add('message--visible');
            successMessageElement.classList.remove('message--visible');
        };

  
        const showSuccessMessage = (message) => {
            successMessageElement.textContent = message;
            successMessageElement.classList.add('message--visible');
            errorMessageElement.classList.remove('message--visible');
        };

     
        const hideMessages = () => {
            errorMessageElement.classList.remove('message--visible');
            successMessageElement.classList.remove('message--visible');
        };

      
        const createImageElement = (imageUrl, index) => {
            const galleryItem = document.createElement('div');
            galleryItem.className = 'gallery__item';
            
            const imageElement = document.createElement('img');
            imageElement.className = 'gallery__image';
            imageElement.src = imageUrl;
            imageElement.alt = `Случайное изображение ${index + 1}`;
            imageElement.loading = 'lazy'; // Ленивая загрузка для оптимизации
            
            const captionElement = document.createElement('div');
            captionElement.className = 'gallery__caption';
            captionElement.textContent = `Изображение ${index + 1}`;
            
            galleryItem.appendChild(imageElement);
            galleryItem.appendChild(captionElement);
            
            return galleryItem;
        };

       
        const loadImages = async () => {
            try {
                showLoader();
                hideMessages();
                
                const response = await fetch(API_URL);
                
                if (!response.ok) {
                    throw new Error(`Ошибка загрузки: ${response.status}`);
                }
                
                const data = await response.json();
                
                if (data.status !== 'success') {
                    throw new Error('Ошибка в данных API');
                }
                
             
                data.message.forEach((imageUrl, index) => {
                    const imageElement = createImageElement(imageUrl, index);
                    galleryElement.appendChild(imageElement);
                });
                
                showSuccessMessage(`Успешно загружено ${data.message.length} изображений`);
            } catch (error) {
                console.error('Ошибка при загрузке изображений:', error);
                showErrorMessage(`Не удалось загрузить изображения: ${error.message}`);
            } finally {
                hideLoader();
            }
        };

     
        const clearGallery = () => {
            galleryElement.innerHTML = '';
            hideMessages();
            showSuccessMessage('Галерея очищена');
        };

        loadImagesButton.addEventListener('click', loadImages);
        loadMoreButton.addEventListener('click', loadImages);
        clearGalleryButton.addEventListener('click', clearGallery);
    </script>
</body>
</html>
